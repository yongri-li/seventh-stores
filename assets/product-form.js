/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/@shopify/theme-cart/request.js":
/*!*****************************************************!*\
  !*** ./node_modules/@shopify/theme-cart/request.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"cart\": () => (/* binding */ cart),\n/* harmony export */   \"cartAdd\": () => (/* binding */ cartAdd),\n/* harmony export */   \"cartAddFromForm\": () => (/* binding */ cartAddFromForm),\n/* harmony export */   \"cartChange\": () => (/* binding */ cartChange),\n/* harmony export */   \"cartClear\": () => (/* binding */ cartClear),\n/* harmony export */   \"cartShippingRates\": () => (/* binding */ cartShippingRates),\n/* harmony export */   \"cartUpdate\": () => (/* binding */ cartUpdate)\n/* harmony export */ });\nfunction getDefaultRequestConfig() {\n  return JSON.parse(\n    JSON.stringify({\n      credentials: 'same-origin',\n      headers: {\n        'X-Requested-With': 'XMLHttpRequest',\n        'Content-Type': 'application/json;'\n      }\n    })\n  );\n}\n\nfunction fetchJSON(url, config) {\n  return fetch(url, config).then(function(response) {\n    if (!response.ok) {\n      throw response;\n    }\n    return response.json();\n  });\n}\n\nfunction cart() {\n  return fetchJSON('/cart.js', getDefaultRequestConfig());\n}\n\nfunction cartAdd(id, quantity, properties) {\n  var config = getDefaultRequestConfig();\n\n  config.method = 'POST';\n  config.body = JSON.stringify({\n    id: id,\n    quantity: quantity,\n    properties: properties\n  });\n\n  return fetchJSON('/cart/add.js', config);\n}\n\nfunction cartAddFromForm(formData) {\n  var config = getDefaultRequestConfig();\n  delete config.headers['Content-Type'];\n\n  config.method = 'POST';\n  config.body = formData;\n\n  return fetchJSON('/cart/add.js', config);\n}\n\nfunction cartChange(line, options) {\n  var config = getDefaultRequestConfig();\n\n  options = options || {};\n\n  config.method = 'POST';\n  config.body = JSON.stringify({\n    line: line,\n    quantity: options.quantity,\n    properties: options.properties\n  });\n\n  return fetchJSON('/cart/change.js', config);\n}\n\nfunction cartClear() {\n  var config = getDefaultRequestConfig();\n  config.method = 'POST';\n\n  return fetchJSON('/cart/clear.js', config);\n}\n\nfunction cartUpdate(body) {\n  var config = getDefaultRequestConfig();\n\n  config.method = 'POST';\n  config.body = JSON.stringify(body);\n\n  return fetchJSON('/cart/update.js', config);\n}\n\nfunction cartShippingRates() {\n  return fetchJSON('/cart/shipping_rates.json', getDefaultRequestConfig());\n}\n\n\n//# sourceURL=webpack://block-shopify-framework/./node_modules/@shopify/theme-cart/request.js?");

/***/ }),

/***/ "./node_modules/@shopify/theme-cart/theme-cart.js":
/*!********************************************************!*\
  !*** ./node_modules/@shopify/theme-cart/theme-cart.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"addItem\": () => (/* binding */ addItem),\n/* harmony export */   \"addItemFromForm\": () => (/* binding */ addItemFromForm),\n/* harmony export */   \"clearAttributes\": () => (/* binding */ clearAttributes),\n/* harmony export */   \"clearItems\": () => (/* binding */ clearItems),\n/* harmony export */   \"clearNote\": () => (/* binding */ clearNote),\n/* harmony export */   \"getAttributes\": () => (/* binding */ getAttributes),\n/* harmony export */   \"getItem\": () => (/* binding */ getItem),\n/* harmony export */   \"getItemIndex\": () => (/* binding */ getItemIndex),\n/* harmony export */   \"getNote\": () => (/* binding */ getNote),\n/* harmony export */   \"getShippingRates\": () => (/* binding */ getShippingRates),\n/* harmony export */   \"getState\": () => (/* binding */ getState),\n/* harmony export */   \"removeItem\": () => (/* binding */ removeItem),\n/* harmony export */   \"updateAttributes\": () => (/* binding */ updateAttributes),\n/* harmony export */   \"updateItem\": () => (/* binding */ updateItem),\n/* harmony export */   \"updateNote\": () => (/* binding */ updateNote)\n/* harmony export */ });\n/* harmony import */ var _request__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./request */ \"./node_modules/@shopify/theme-cart/request.js\");\n/* harmony import */ var _validate__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./validate */ \"./node_modules/@shopify/theme-cart/validate.js\");\n/**\n * Cart Template Script\n * ------------------------------------------------------------------------------\n * A file that contains scripts highly couple code to the Cart template.\n *\n * @namespace cart\n */\n\n\n\n\n/**\n * Returns the state object of the cart\n * @returns {Promise} Resolves with the state object of the cart (https://help.shopify.com/en/themes/development/getting-started/using-ajax-api#get-cart)\n */\nfunction getState() {\n  return _request__WEBPACK_IMPORTED_MODULE_0__.cart();\n}\n\n/**\n * Returns the index of the cart line item\n * @param {string} key The unique key of the line item\n * @returns {Promise} Resolves with the index number of the line item\n */\nfunction getItemIndex(key) {\n  _validate__WEBPACK_IMPORTED_MODULE_1__.key(key);\n\n  return _request__WEBPACK_IMPORTED_MODULE_0__.cart().then(function(state) {\n    var index = -1;\n\n    state.items.forEach(function(item, i) {\n      index = item.key === key ? i + 1 : index;\n    });\n\n    if (index === -1) {\n      return Promise.reject(\n        new Error('Theme Cart: Unable to match line item with provided key')\n      );\n    }\n\n    return index;\n  });\n}\n\n/**\n * Fetches the line item object\n * @param {string} key The unique key of the line item\n * @returns {Promise} Resolves with the line item object (See response of cart/add.js https://help.shopify.com/en/themes/development/getting-started/using-ajax-api#add-to-cart)\n */\nfunction getItem(key) {\n  _validate__WEBPACK_IMPORTED_MODULE_1__.key(key);\n\n  return _request__WEBPACK_IMPORTED_MODULE_0__.cart().then(function(state) {\n    var lineItem = null;\n\n    state.items.forEach(function(item) {\n      lineItem = item.key === key ? item : lineItem;\n    });\n\n    if (lineItem === null) {\n      return Promise.reject(\n        new Error('Theme Cart: Unable to match line item with provided key')\n      );\n    }\n\n    return lineItem;\n  });\n}\n\n/**\n * Add a new line item to the cart\n * @param {number} id The variant's unique ID\n * @param {object} options Optional values to pass to /cart/add.js\n * @param {number} options.quantity The quantity of items to be added to the cart\n * @param {object} options.properties Line item property key/values (https://help.shopify.com/en/themes/liquid/objects/line_item#line_item-properties)\n * @returns {Promise} Resolves with the line item object (See response of cart/add.js https://help.shopify.com/en/themes/development/getting-started/using-ajax-api#add-to-cart)\n */\nfunction addItem(id, options) {\n  options = options || {};\n\n  _validate__WEBPACK_IMPORTED_MODULE_1__.id(id);\n\n  return _request__WEBPACK_IMPORTED_MODULE_0__.cartAdd(id, options.quantity, options.properties);\n}\n\n/**\n * Add a new line item to the cart from a product form\n * @param {object} form DOM element which is equal to the <form> node\n * @returns {Promise} Resolves with the line item object (See response of cart/add.js https://help.shopify.com/en/themes/development/getting-started/using-ajax-api#add-to-cart)\n */\nfunction addItemFromForm(form) {\n  _validate__WEBPACK_IMPORTED_MODULE_1__.form(form);\n\n  var formData = new FormData(form);\n  _validate__WEBPACK_IMPORTED_MODULE_1__.id(parseInt(formData.get('id'), 10));\n\n  return _request__WEBPACK_IMPORTED_MODULE_0__.cartAddFromForm(formData);\n}\n\n/**\n * Changes the quantity and/or properties of an existing line item.\n * @param {string} key The unique key of the line item (https://help.shopify.com/en/themes/liquid/objects/line_item#line_item-key)\n * @param {object} options Optional values to pass to /cart/add.js\n * @param {number} options.quantity The quantity of items to be added to the cart\n * @param {object} options.properties Line item property key/values (https://help.shopify.com/en/themes/liquid/objects/line_item#line_item-properties)\n * @returns {Promise} Resolves with the state object of the cart (https://help.shopify.com/en/themes/development/getting-started/using-ajax-api#get-cart)\n */\nfunction updateItem(key, options) {\n  _validate__WEBPACK_IMPORTED_MODULE_1__.key(key);\n  _validate__WEBPACK_IMPORTED_MODULE_1__.options(options);\n\n  return getItemIndex(key).then(function(line) {\n    return _request__WEBPACK_IMPORTED_MODULE_0__.cartChange(line, options);\n  });\n}\n\n/**\n * Removes a line item from the cart\n * @param {string} key The unique key of the line item (https://help.shopify.com/en/themes/liquid/objects/line_item#line_item-key)\n * @returns {Promise} Resolves with the state object of the cart (https://help.shopify.com/en/themes/development/getting-started/using-ajax-api#get-cart)\n */\nfunction removeItem(key) {\n  _validate__WEBPACK_IMPORTED_MODULE_1__.key(key);\n\n  return getItemIndex(key).then(function(line) {\n    return _request__WEBPACK_IMPORTED_MODULE_0__.cartChange(line, { quantity: 0 });\n  });\n}\n\n/**\n * Sets all quantities of all line items in the cart to zero. This does not remove cart attributes nor the cart note.\n * @returns {Promise} Resolves with the state object of the cart (https://help.shopify.com/en/themes/development/getting-started/using-ajax-api#get-cart)\n */\nfunction clearItems() {\n  return _request__WEBPACK_IMPORTED_MODULE_0__.cartClear();\n}\n\n/**\n * Gets all cart attributes\n * @returns {Promise} Resolves with the cart attributes object\n */\nfunction getAttributes() {\n  return _request__WEBPACK_IMPORTED_MODULE_0__.cart().then(function(state) {\n    return state.attributes;\n  });\n}\n\n/**\n * Sets all cart attributes\n * @returns {Promise} Resolves with the cart state object\n */\nfunction updateAttributes(attributes) {\n  return _request__WEBPACK_IMPORTED_MODULE_0__.cartUpdate({ attributes: attributes });\n}\n\n/**\n * Clears all cart attributes\n * @returns {Promise} Resolves with the cart state object\n */\nfunction clearAttributes() {\n  return getAttributes().then(function(attributes) {\n    for (var key in attributes) {\n      attributes[key] = '';\n    }\n    return updateAttributes(attributes);\n  });\n}\n\n/**\n * Gets cart note\n * @returns {Promise} Resolves with the cart note string\n */\nfunction getNote() {\n  return _request__WEBPACK_IMPORTED_MODULE_0__.cart().then(function(state) {\n    return state.note;\n  });\n}\n\n/**\n * Sets cart note\n * @returns {Promise} Resolves with the cart state object\n */\nfunction updateNote(note) {\n  return _request__WEBPACK_IMPORTED_MODULE_0__.cartUpdate({ note: note });\n}\n\n/**\n * Clears cart note\n * @returns {Promise} Resolves with the cart state object\n */\nfunction clearNote() {\n  return _request__WEBPACK_IMPORTED_MODULE_0__.cartUpdate({ note: '' });\n}\n\n/**\n * Get estimated shipping rates.\n * @returns {Promise} Resolves with response of /cart/shipping_rates.json (https://help.shopify.com/en/themes/development/getting-started/using-ajax-api#get-shipping-rates)\n */\nfunction getShippingRates() {\n  return _request__WEBPACK_IMPORTED_MODULE_0__.cartShippingRates();\n}\n\n\n//# sourceURL=webpack://block-shopify-framework/./node_modules/@shopify/theme-cart/theme-cart.js?");

/***/ }),

/***/ "./node_modules/@shopify/theme-cart/validate.js":
/*!******************************************************!*\
  !*** ./node_modules/@shopify/theme-cart/validate.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"form\": () => (/* binding */ form),\n/* harmony export */   \"id\": () => (/* binding */ id),\n/* harmony export */   \"key\": () => (/* binding */ key),\n/* harmony export */   \"options\": () => (/* binding */ options),\n/* harmony export */   \"properties\": () => (/* binding */ properties),\n/* harmony export */   \"quantity\": () => (/* binding */ quantity)\n/* harmony export */ });\nfunction key(key) {\n  if (typeof key !== 'string' || key.split(':').length !== 2) {\n    throw new TypeError(\n      'Theme Cart: Provided key value is not a string with the format xxx:xxx'\n    );\n  }\n}\n\nfunction quantity(quantity) {\n  if (typeof quantity !== 'number' || isNaN(quantity)) {\n    throw new TypeError(\n      'Theme Cart: An object which specifies a quantity or properties value is required'\n    );\n  }\n}\n\nfunction id(id) {\n  if (typeof id !== 'number' || isNaN(id)) {\n    throw new TypeError('Theme Cart: Variant ID must be a number');\n  }\n}\n\nfunction properties(properties) {\n  if (typeof properties !== 'object') {\n    throw new TypeError('Theme Cart: Properties must be an object');\n  }\n}\n\nfunction form(form) {\n  if (!(form instanceof HTMLFormElement)) {\n    throw new TypeError('Theme Cart: Form must be an instance of HTMLFormElement');\n  }\n}\n\nfunction options(options) {\n  if (typeof options !== 'object') {\n    throw new TypeError('Theme Cart: Options must be an object');\n  }\n\n  if (\n    typeof options.quantity === 'undefined' &&\n    typeof options.properties === 'undefined'\n  ) {\n    throw new Error(\n      'Theme Cart: You muse define a value for quantity or properties'\n    );\n  }\n\n  if (typeof options.quantity !== 'undefined') {\n    quantity(options.quantity);\n  }\n\n  if (typeof options.properties !== 'undefined') {\n    properties(options.properties);\n  }\n}\n\n\n//# sourceURL=webpack://block-shopify-framework/./node_modules/@shopify/theme-cart/validate.js?");

/***/ }),

/***/ "./node_modules/@shopify/theme-currency/currency.js":
/*!**********************************************************!*\
  !*** ./node_modules/@shopify/theme-currency/currency.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"formatMoney\": () => (/* binding */ formatMoney)\n/* harmony export */ });\n/**\n * Currency Helpers\n * -----------------------------------------------------------------------------\n * A collection of useful functions that help with currency formatting\n *\n * Current contents\n * - formatMoney - Takes an amount in cents and returns it as a formatted dollar value.\n *\n */\n\nconst moneyFormat = '${{amount}}';\n\n/**\n * Format money values based on your shop currency settings\n * @param  {Number|string} cents - value in cents or dollar amount e.g. 300 cents\n * or 3.00 dollars\n * @param  {String} format - shop money_format setting\n * @return {String} value - formatted value\n */\nfunction formatMoney(cents, format) {\n  if (typeof cents === 'string') {\n    cents = cents.replace('.', '');\n  }\n  let value = '';\n  const placeholderRegex = /\\{\\{\\s*(\\w+)\\s*\\}\\}/;\n  const formatString = format || moneyFormat;\n\n  function formatWithDelimiters(\n    number,\n    precision = 2,\n    thousands = ',',\n    decimal = '.'\n  ) {\n    if (isNaN(number) || number == null) {\n      return 0;\n    }\n\n    number = (number / 100.0).toFixed(precision);\n\n    const parts = number.split('.');\n    const dollarsAmount = parts[0].replace(\n      /(\\d)(?=(\\d\\d\\d)+(?!\\d))/g,\n      `$1${thousands}`\n    );\n    const centsAmount = parts[1] ? decimal + parts[1] : '';\n\n    return dollarsAmount + centsAmount;\n  }\n\n  switch (formatString.match(placeholderRegex)[1]) {\n    case 'amount':\n      value = formatWithDelimiters(cents, 2);\n      break;\n    case 'amount_no_decimals':\n      value = formatWithDelimiters(cents, 0);\n      break;\n    case 'amount_with_comma_separator':\n      value = formatWithDelimiters(cents, 2, '.', ',');\n      break;\n    case 'amount_no_decimals_with_comma_separator':\n      value = formatWithDelimiters(cents, 0, '.', ',');\n      break;\n  }\n\n  return formatString.replace(placeholderRegex, value);\n}\n\n\n//# sourceURL=webpack://block-shopify-framework/./node_modules/@shopify/theme-currency/currency.js?");

/***/ }),

/***/ "./scripts/components/product-form.js":
/*!********************************************!*\
  !*** ./scripts/components/product-form.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _shopify_theme_currency__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @shopify/theme-currency */ \"./node_modules/@shopify/theme-currency/currency.js\");\n/* harmony import */ var _shopify_theme_cart__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @shopify/theme-cart */ \"./node_modules/@shopify/theme-cart/theme-cart.js\");\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\nfunction _wrapNativeSuper(Class) { var _cache = typeof Map === \"function\" ? new Map() : undefined; _wrapNativeSuper = function _wrapNativeSuper(Class) { if (Class === null || !_isNativeFunction(Class)) return Class; if (typeof Class !== \"function\") { throw new TypeError(\"Super expression must either be null or a function\"); } if (typeof _cache !== \"undefined\") { if (_cache.has(Class)) return _cache.get(Class); _cache.set(Class, Wrapper); } function Wrapper() { return _construct(Class, arguments, _getPrototypeOf(this).constructor); } Wrapper.prototype = Object.create(Class.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }); return _setPrototypeOf(Wrapper, Class); }; return _wrapNativeSuper(Class); }\nfunction _construct(Parent, args, Class) { if (_isNativeReflectConstruct()) { _construct = Reflect.construct.bind(); } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction _isNativeFunction(fn) { return Function.toString.call(fn).indexOf(\"[native code]\") !== -1; }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n\n\n/*\n * ProductForm Class\n * \n * A custom class that extends HTMLElement.\n * Handles the feedback for the form and updates\n * prices and inputs.\n */\nvar ProductForm = /*#__PURE__*/function (_HTMLElement) {\n  _inherits(ProductForm, _HTMLElement);\n  var _super = _createSuper(ProductForm);\n  function ProductForm() {\n    var _this;\n    _classCallCheck(this, ProductForm);\n    _this = _super.call(this);\n    _this.formSelector = '[data-product-form]';\n    _this.purchaseOptionSelector = '[data-purchase-option-selector]';\n    _this.singlePlanSelector = '[data-single-plan-selector]';\n    _this.form = _this.querySelector(_this.formSelector);\n    _this.VariantSelectors = _this.querySelector('variant-selectors') || false;\n    _this.SellingPlans = _this.querySelector('selling-plan') || false;\n    var productHandle = _this.form.dataset.productHandle;\n    _this.currentVariant;\n\n    // Fetch the product data from the .js endpoint because it includes\n    // more data than the .json endpoint. Alternatively, you could inline the output\n    // of {{ product | json }} inside a <script> tag, with the downside that the\n    // data can never be cached by the browser.\n    fetch(\"/products/\".concat(productHandle, \".js\")).then(function (response) {\n      return response.json();\n    }).then(function (productJSON) {\n      _this.form.dataset.product = JSON.stringify(productJSON);\n      _this.form.addEventListener('submit', _this.onFormSubmit.bind(_assertThisInitialized(_this)));\n      _this.updateCurrentVariant();\n      _this.updateMainImage();\n    });\n    return _this;\n  }\n  _createClass(ProductForm, [{\n    key: \"handleFormChange\",\n    value:\n    /*\n     * On form change callback\n     */\n    function handleFormChange() {\n      this.updatePricing();\n      this.updateId();\n      this.updateMainCTA();\n      this.updateStockNotice();\n      this.updateSellingPlan();\n      this.updateMainImage();\n      this.updateHistoryState();\n      this.dispatchEvent(Events().formUpdated._event(this.form));\n    }\n  }, {\n    key: \"setUpForm\",\n    value: function setUpForm() {\n      this.updatePricing();\n      this.updateId();\n      this.updateMainCTA();\n      this.updateStockNotice();\n      this.updateSellingPlan();\n    }\n  }, {\n    key: \"updateHistoryState\",\n    value: function updateHistoryState() {\n      // Create the new URL with the variant ID\n      var newUrl = window.location.protocol + \"//\" + window.location.host + window.location.pathname + '?variant=' + this.currentVariant.id;\n\n      // Add the variant ID to the URL without causing a page refresh\n      history.pushState({\n        path: newUrl\n      }, '', newUrl);\n    }\n  }, {\n    key: \"updateCurrentVariant\",\n    value: function updateCurrentVariant() {\n      if (this.VariantSelectors == false) return;\n      this.currentVariant = this.VariantSelectors.getCurrentVariant();\n    }\n  }, {\n    key: \"enableLoading\",\n    value: function enableLoading() {\n      this.setAttribute(\"aria-busy\", \"true\");\n    }\n  }, {\n    key: \"disableLoading\",\n    value: function disableLoading() {\n      this.setAttribute(\"aria-busy\", \"false\");\n    }\n  }, {\n    key: \"updateId\",\n    value: function updateId() {\n      var variant = this.currentVariant;\n      var idSelector = this.form.querySelector('[name=\"id\"]');\n      if (idSelector === undefined) return false;\n      idSelector.value = parseInt(variant.id);\n    }\n\n    /*\n     * On form submit callback\n     *\n     * Uses the Cart Object from Shopify Scripts\n     */\n  }, {\n    key: \"onFormSubmit\",\n    value: function onFormSubmit(event) {\n      event.preventDefault();\n      this.submitForm();\n    }\n  }, {\n    key: \"submitForm\",\n    value: function submitForm() {\n      var _this2 = this;\n      this.enableLoading();\n      var formData = new FormData(this.form);\n      fetch(\"\".concat(window.theme.routes.cart_add_url), {\n        method: 'POST',\n        body: formData\n      }).then(function (response) {\n        var item = response.json();\n        document.dispatchEvent(Events().itemAdded._event(item));\n        _shopify_theme_cart__WEBPACK_IMPORTED_MODULE_1__.getState().then(function (state) {\n          document.dispatchEvent(Events().cartUpdated._event(state));\n          document.querySelector('cart-items').getSectionInnerHTML();\n          _this2.disableLoading();\n        });\n      })[\"catch\"](function (error) {\n        console.error('Error:', error);\n      });\n    }\n  }, {\n    key: \"getPricing\",\n    value: function getPricing() {\n      var _this3 = this;\n      var prices = {};\n      if (!this.SellingPlans) {\n        prices['price'] = this.currentVariant.price;\n        prices['compare_at_price'] = this.currentVariant.compare_at_price;\n        return prices;\n      }\n      if (this.SellingPlans.getPurchaseType() == \"one_time\") {\n        prices['price'] = this.currentVariant.price;\n        prices['compare_at_price'] = this.currentVariant.compare_at_price;\n        return prices;\n      }\n      var plan = this.currentVariant.selling_plan_allocations.find(function (selling_plan) {\n        return selling_plan.selling_plan_id == _this3.SellingPlans.getSellingPlanID();\n      });\n      if (Object.keys(plan).length !== 0 && this.SellingPlans.getPurchaseType() == \"subscription\") {\n        prices['price'] = plan.price;\n        prices['compare_at_price'] = plan.compare_at_price;\n      }\n      return prices;\n    }\n\n    /*\n     * Update the form Pricing\n     * Pass through the form object\n     */\n  }, {\n    key: \"updatePricing\",\n    value: function updatePricing() {\n      var prices = this.getPricing();\n      var priceElement = this.querySelector('[data-product-price]');\n      var comparePriceElement = this.querySelector('[data-product-compare-price]');\n      var price, comparePrice;\n      price = prices.price;\n      comparePrice = prices.compare_at_price;\n\n      // Return if there is no price element in the form\n      if (priceElement === undefined) return false;\n      priceElement.innerHTML = _shopify_theme_currency__WEBPACK_IMPORTED_MODULE_0__.formatMoney(price, window.theme.moneyFormat);\n      if (comparePrice > price) {\n        comparePriceElement.classList.remove(\"hidden\");\n        comparePriceElement.innerHTML = _shopify_theme_currency__WEBPACK_IMPORTED_MODULE_0__.formatMoney(comparePrice, window.theme.moneyFormat);\n      } else {\n        comparePriceElement.classList.add(\"hidden\");\n      }\n    }\n  }, {\n    key: \"updateStockNotice\",\n    value:\n    /*\n     * Update the stock notice\n     * Show if the item is in stock or not.\n     * Can't show the amount in stock as that information is\n     * not availble on a per variant basis.\n     */\n    function updateStockNotice() {\n      var variant = this.currentVariant;\n      var stockNotice = this.querySelector('[data-product-stock-notice]');\n\n      // Return if there is no stock notice in the form\n      if (stockNotice === undefined || stockNotice === null) return false;\n      if (variant.available) {\n        stockNotice.innerHTML = \"<p class=\\\"font-bold text-green-500\\\">\".concat(window.theme.strings.inStock, \"</p>\");\n      } else {\n        stockNotice.innerHTML = \"<p class=\\\"font-bold text-red-500\\\">\".concat(window.theme.strings.soldOut, \"</p>\");\n      }\n    }\n  }, {\n    key: \"updateMainImage\",\n    value: function updateMainImage() {\n      var gallery = document.querySelector(\"[data-product-gallery=\\\"\".concat(this.dataset.productId, \"\\\"]\")) || false;\n      var featuredMedia = document.querySelector(\"[data-media-id=\\\"\".concat(this.dataset.section, \"-\").concat(this.currentVariant.featured_media.id, \"\\\"]\"));\n      if (!gallery || !featuredMedia) return;\n      gallery.insertBefore(featuredMedia, gallery.firstChild);\n      gallery.scrollTo({\n        left: 0\n      });\n      window.scrollTo(0, 0);\n    }\n  }, {\n    key: \"updateSellingPlan\",\n    value: function updateSellingPlan() {\n      if (!this.SellingPlans) return;\n      var sellingPlan = this.form.querySelector('[name=\"selling_plan\"]');\n      if (this.SellingPlans.getPurchaseType() == \"one_time\") {\n        sellingPlan.disabled = true;\n        return;\n      }\n      sellingPlan.disabled = false;\n      this.SellingPlans.setSellingPlanID();\n    }\n\n    /*\n     * Update the main CTA\n     * Disable the CTA if not available.\n     */\n  }, {\n    key: \"updateMainCTA\",\n    value: function updateMainCTA() {\n      var variant = this.currentVariant;\n      var cta = this.form.querySelector('[name=\"add\"]');\n\n      // Return if there is no main CTA\n      if (cta === undefined || cta === null) return false;\n      if (variant.available) {\n        cta.disabled = false;\n      } else {\n        cta.disabled = true;\n      }\n    }\n  }]);\n  return ProductForm;\n}( /*#__PURE__*/_wrapNativeSuper(HTMLElement));\ncustomElements.define('product-form', ProductForm);\nvar VariantSelectors = /*#__PURE__*/function (_HTMLElement2) {\n  _inherits(VariantSelectors, _HTMLElement2);\n  var _super2 = _createSuper(VariantSelectors);\n  function VariantSelectors() {\n    var _this4;\n    _classCallCheck(this, VariantSelectors);\n    _this4 = _super2.call(this);\n    _this4.productForm = _this4.closest('product-form');\n    _this4.addEventListener('change', _this4.handleOnChange);\n    return _this4;\n  }\n  _createClass(VariantSelectors, [{\n    key: \"handleOnChange\",\n    value: function handleOnChange(e) {\n      e.stopPropagation();\n      this.productForm.currentVariant = this.getCurrentVariant();\n      this.productForm.handleFormChange();\n    }\n  }, {\n    key: \"getVariantData\",\n    value: function getVariantData() {\n      return JSON.parse(this.querySelector('[type=\"application/json\"]').textContent);\n    }\n  }, {\n    key: \"getCurrentVariant\",\n    value: function getCurrentVariant() {\n      var options = Array.from(this.querySelectorAll('[data-option-selector]'), function (select) {\n        return select.value;\n      });\n      return this.getVariantData().find(function (variant) {\n        return !variant.options.map(function (option, index) {\n          return options[index] === option;\n        }).includes(false);\n      });\n    }\n  }]);\n  return VariantSelectors;\n}( /*#__PURE__*/_wrapNativeSuper(HTMLElement));\ncustomElements.define('variant-selectors', VariantSelectors);\nvar VariantRadios = /*#__PURE__*/function (_VariantSelectors) {\n  _inherits(VariantRadios, _VariantSelectors);\n  var _super3 = _createSuper(VariantRadios);\n  function VariantRadios() {\n    _classCallCheck(this, VariantRadios);\n    return _super3.call(this);\n  }\n  _createClass(VariantRadios, [{\n    key: \"getCurrentVariant\",\n    value: function getCurrentVariant() {\n      var fieldsets = Array.from(this.querySelectorAll('fieldset'));\n      var options = fieldsets.map(function (fieldset) {\n        return Array.from(fieldset.querySelectorAll('input')).find(function (radio) {\n          return radio.checked;\n        }).value;\n      });\n      return this.getVariantData().find(function (variant) {\n        return !variant.options.map(function (option, index) {\n          return options[index] === option;\n        }).includes(false);\n      });\n    }\n  }]);\n  return VariantRadios;\n}(VariantSelectors);\ncustomElements.define('variant-radios', VariantRadios);\nvar SellingPlan = /*#__PURE__*/function (_HTMLElement3) {\n  _inherits(SellingPlan, _HTMLElement3);\n  var _super4 = _createSuper(SellingPlan);\n  function SellingPlan() {\n    var _this5;\n    _classCallCheck(this, SellingPlan);\n    _this5 = _super4.call(this);\n    _this5.productForm = _this5.closest('product-form');\n    _this5.sellingPlan = _this5.querySelector('select');\n    _this5.addEventListener('change', _this5.handleOnChange.bind(_assertThisInitialized(_this5)));\n    _this5.setSellingPlanID();\n    return _this5;\n  }\n  _createClass(SellingPlan, [{\n    key: \"handleOnChange\",\n    value: function handleOnChange(e) {\n      e.stopPropagation();\n      var purchaseType = this.getPurchaseType();\n      this.sellingPlan.disabled = false;\n      if (purchaseType == \"one_time\") {\n        this.sellingPlan.disabled = true;\n      }\n      this.productForm.handleFormChange();\n    }\n  }, {\n    key: \"getPurchaseType\",\n    value: function getPurchaseType() {\n      return this.querySelector('input[type=\"radio\"]:checked').value;\n    }\n  }, {\n    key: \"getSellingPlanID\",\n    value: function getSellingPlanID() {\n      return this.sellingPlan.value;\n    }\n  }, {\n    key: \"setSellingPlanID\",\n    value: function setSellingPlanID() {\n      var form = this.productForm.querySelector(\"#\".concat(this.sellingPlan.getAttribute(\"form\"))) || false;\n      if (!form) return;\n      form.querySelector('input[name=\"selling_plan\"]').value = this.getSellingPlanID();\n    }\n  }]);\n  return SellingPlan;\n}( /*#__PURE__*/_wrapNativeSuper(HTMLElement));\ncustomElements.define('selling-plan', SellingPlan);\n\n//# sourceURL=webpack://block-shopify-framework/./scripts/components/product-form.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./scripts/components/product-form.js");
/******/ 	
/******/ })()
;