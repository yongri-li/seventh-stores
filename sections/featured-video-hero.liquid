{%- liquid
  assign mobile_content_focus = section.settings.mobile_content_focus
  assign mobile_content_alignment = section.settings.mobile_content_alignment
  assign desktop_content_focus = section.settings.desktop_content_focus
  assign desktop_content_alignment = section.settings.desktop_content_alignment
-%}

<style type="text/css">
  {%- unless section.settings.adapt_to_mobile_video -%}
  @media only screen and (max-width: 899px ){
    #hero-{{ section.id }} {
      height: {{ section.settings.max_height_mobile }}vh;
    }
  }
  {%- endunless -%}

  {%- unless section.settings.adapt_to_desktop_video -%}
  @media only screen and (min-width: 990px ){
    #hero-{{ section.id }}{
      height: {{ section.settings.max_height_desktop }}vh;
    }
  }
  {%- endunless -%}

  .media-container{
    position: relative;
  }

  .media-container > div{
    position: absolute;
    inset: 0;
    height: 100%;
    width: 100%;
  }

  .media-container > div > video{
    object-fit: cover;
    object-position: center;
    height: 100%;
    width: 100%;
  }

  #mediaContainerMobile-{{ section.id }} {
    position: relative;
    padding-top: {{ 1 | divided_by: section.settings.mobile_video.aspect_ratio | times: 100 }}%;
  }

  #mediaContainerDesktop-{{ section.id }} {
    position: relative;
    padding-top: {{ 1 | divided_by: section.settings.desktop_video.aspect_ratio | times: 100 }}%;
  }
</style>

<section class="{% if section.settings.contain_hero %}container{% endif %} {% if section.settings.section_gutter %}px-4{% endif %} mx-auto">
  <div id="hero-{{ section.id }}" class="flex flex-col justify-center relative overflow-hidden">
    {%- if section.settings.hero_link != blank -%}
      <a href="{{ section.settings.hero_link }}" class="z-10 absolute top-0 left-0 right-0 bottom-0 "></a>
    {%- endif -%}

    <div id="mediaContainerMobile-{{ section.id }}" class="media-container lg:hidden">
      <div>
        {{ section.settings.mobile_video | video_tag: loop: true, controls: false, muted: true, autoplay: true }}
      </div>
    </div>

    <div id="mediaContainerDesktop-{{ section.id }}" class="media-container hidden lg:block">
      <div>
        {{ section.settings.desktop_video | video_tag: loop: true, controls: false, muted: true, autoplay: true }}
      </div>
    </div>

    <div class="absolute inset-0 lg:absolute lg:inset-0 py-8 px-4 mx-auto h-full flex flex-col {{ mobile_content_focus }} {{ desktop_content_focus }} lg:py-8 lg:px-16">
      <div class="{{ mobile_content_alignment }} {{ desktop_content_alignment }}">
        {%- for block in section.blocks -%}
          <div
            id="block-{{ block.id }}"
            {% unless forloop.last %}
              class="lg:pb-8 pb-6"
            {% endunless %}
          >
            {%- case block.type -%}
              {%- when 'button' -%}
                <a
                  href="{{ block.settings.button_link }}"
                  class="[ inline-block flex-grow lg:inline-block lg:flex-grow-0 focus:shadow-outline focus:outline-none mx-1 py-3 px-4 leading-tight font-bold ] btn {{ block.settings.button_style }}"
                  {%- if block.settings.open_in_new_tab -%}
                    target="_blank"
                  {%- endif -%}
                >
                  {{ block.settings.button_text }}
                </a>
              {%- else -%}
                <style type="text/css">
                  #hero-{{ section.id }} #block-{{ block.id }} .rte *{
                    font-size: {{ block.settings.font_size_mobile }}px;
                    color: {{ block.settings.text_color }};
                  }

                  @media only screen and (min-width: 1024px){
                    #hero-{{ section.id }} #block-{{ block.id }} .rte *{
                      font-size: {{ block.settings.font_size_desktop }}px;
                    }
                  }
                </style>

                <div class="rte">
                  {{ block.settings.content }}
                </div>
            {%- endcase -%}
          </div>
        {%- endfor -%}
      </div>
    </div>
  </div>
</section>

{% schema %}
{
  "name": "Hero Video",
  "class": "hero-video-section",
  "settings": [
    {
      "type": "checkbox",
      "default": false,
      "label": "Contain Hero image?",
      "id": "contain_hero"
    },
    {
      "type": "checkbox",
      "default": true,
      "label": "Dynamically Load Images?",
      "id": "dynamic_loading",
      "info": "Enable this setting to use the browsers dynamic loading to improve LCP. You should only check this box if the Hero banner is the first section on the page and appears above the fold."
    },
    {
      "type": "checkbox",
      "id": "section_gutter",
      "label": "Add a gutter to the edges?",
      "default": false
    },
    {
      "type": "url",
      "id": "hero_link",
      "label": "Link",
      "info": "Add a link here to make the whole Hero image clickable."
    },
    {
      "type": "header",
      "content": "Mobile Styling"
    },
    {
      "type": "checkbox",
      "id": "adapt_to_mobile_video",
      "label": "Adapt to video?",
      "info": "Checking this box will use the natural height and width of the video and ignore the max height setting.",
      "default": false
    },
    {
      "type": "range",
      "id": "max_height_mobile",
      "min": 0,
      "max": 100,
      "step": 1,
      "unit": "vh",
      "label": "Max Height - Mobile",
      "default": 90
    },
    {
      "type": "video",
      "id": "mobile_video",
      "label": "Video"
    },
    {
      "type": "select",
      "id": "mobile_image_focus",
      "label": "Image Focus",
      "options": [
        {
          "label": "Top Left",
          "value": "object-left-top"
        },
        {
          "label": "Center Left",
          "value": "object-left"
        },
        {
          "label": "Bottom Left",
          "value": "object-left-bottom"
        },
        {
          "label": "Top Center",
          "value": "object-top"
        },
        {
          "label": "Center Center",
          "value": "object-center"
        },
        {
          "label": "Bottom Center",
          "value": "object-bottom"
        },
        {
          "label": "Top Right",
          "value": "object-right-top"
        },
        {
          "label": "Center Right",
          "value": "object-right"
        },
        {
          "label": "Bottom Right",
          "value": "object-right-bottom"
        }
      ]
    },
    {
      "type": "select",
      "id": "mobile_content_focus",
      "label": "Content Focus - Mobile",
      "options": [
        {
          "label": "Top Left",
          "value": "justify-start items-start"
        },
        {
          "label": "Center Left",
          "value": "justify-center items-start"
        },
        {
          "label": "Bottom Left",
          "value": "justify-end items-start"
        },
        {
          "label": "Top Center",
          "value": "justify-start items-center"
        },
        {
          "label": "Center Center",
          "value": "justify-center items-center"
        },
        {
          "label": "Bottom Center",
          "value": "justify-end items-center"
        },
        {
          "label": "Top Right",
          "value": "justify-start items-end"
        },
        {
          "label": "Center Right",
          "value": "justify-center items-end"
        },
        {
          "label": "Bottom Right",
          "value": "justify-end items-end"
        }
      ]
    },
    {
      "type": "select",
      "id": "mobile_content_alignment",
      "label": "Content Alignment",
      "options": [
        {
          "label": "Left",
          "value": "text-left"
        },
        {
          "label": "Center",
          "value": "text-center"
        },
        {
          "label": "Right",
          "value": "text-right"
        }
      ]
    },
    {
      "type": "header",
      "content": "Desktop Styling"
    },
    {
      "type": "checkbox",
      "id": "adapt_to_video_desktop",
      "label": "Adapt to video?",
      "info": "Checking this box will use the natural height and width of the video and ignore the max height setting.",
      "default": false
    },
    {
      "type": "range",
      "id": "max_height_desktop",
      "min": 0,
      "max": 100,
      "step": 1,
      "unit": "vh",
      "label": "Max Height - Desktop",
      "default": 90
    },
    {
      "type": "video",
      "id": "desktop_video",
      "label": "Video"
    },
    {
      "type": "select",
      "id": "desktop_image_focus",
      "label": "Image Focus",
      "options": [
        {
          "label": "Top Left",
          "value": "lg:object-left-top"
        },
        {
          "label": "Center Left",
          "value": "lg:object-left"
        },
        {
          "label": "Bottom Left",
          "value": "lg:object-left-bottom"
        },
        {
          "label": "Top Center",
          "value": "lg:object-top"
        },
        {
          "label": "Center Center",
          "value": "lg:object-center"
        },
        {
          "label": "Bottom Center",
          "value": "lg:object-bottom"
        },
        {
          "label": "Top Right",
          "value": "lg:object-right-top"
        },
        {
          "label": "Center Right",
          "value": "lg:object-right"
        },
        {
          "label": "Bottom Right",
          "value": "lg:object-right-bottom"
        }
      ]
    },
    {
      "type": "select",
      "id": "desktop_content_focus",
      "label": "Content Focus - Desktop",
      "options": [
        {
          "label": "Top Left",
          "value": "lg:justify-start lg:items-start"
        },
        {
          "label": "Center Left",
          "value": "lg:justify-center lg:items-start"
        },
        {
          "label": "Bottom Left",
          "value": "lg:justify-end lg:items-start"
        },
        {
          "label": "Top Center",
          "value": "lg:justify-start lg:items-center"
        },
        {
          "label": "Center Center",
          "value": "lg:justify-center lg:items-center"
        },
        {
          "label": "Bottom Center",
          "value": "lg:justify-end lg:items-center"
        },
        {
          "label": "Top Right",
          "value": "lg:justify-start lg:items-end"
        },
        {
          "label": "Center Right",
          "value": "lg:justify-center lg:items-end"
        },
        {
          "label": "Bottom Right",
          "value": "lg:justify-end lg:items-end"
        }
      ]
    },
    {
      "type": "select",
      "id": "desktop_content_alignment",
      "label": "Content Alignment",
      "options": [
        {
          "label": "Left",
          "value": "lg:text-left"
        },
        {
          "label": "Center",
          "value": "lg:text-center"
        },
        {
          "label": "Right",
          "value": "lg:text-right"
        }
      ]
    }
  ],
  "blocks": [
    {
      "name": "Content",
      "type": "content",
      "settings": [
        {
          "type": "richtext",
          "id": "content",
          "label": "Content"
        },
        {
          "type": "color",
          "id": "text_color",
          "label": "Text Color",
          "default": "#000000"
        },
        {
          "type": "range",
          "id": "font_size_mobile",
          "label": "Font Size - Mobile",
          "min": 10,
          "max": 50,
          "step": 1,
          "default": 16
        },
        {
          "type": "range",
          "id": "font_size_desktop",
          "label": "Font Size - Desktop",
          "min": 10,
          "max": 50,
          "step": 1,
          "default": 16
        }
      ]
    },
    {
      "name": "Button",
      "type": "button",
      "settings": [
        {
          "type": "text",
          "id": "button_text",
          "label": "Button text"
        },
        {
          "type": "url",
          "id": "button_link",
          "label": "Button URL"
        },
        {
          "type": "checkbox",
          "default": false,
          "id": "open_in_new_tab",
          "label": "Open the link in a new tab?"
        },
        {
          "type": "select",
          "id": "button_style",
          "label": "Button Style",
          "options": [
            {
              "label": "Primary",
              "value": "primary-button"
            },
            {
              "label": "Secondary",
              "value": "secondary-button"
            },
            {
              "label": "Tertiary",
              "value": "tertiary-button"
            }
          ],
          "default": "primary-button"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Hero Video",
      "category": "Content"
    }
  ]
}
{% endschema %}
